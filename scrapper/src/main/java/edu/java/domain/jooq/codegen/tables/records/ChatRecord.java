/*
 * This file is generated by jOOQ.
 */

package edu.java.domain.jooq.codegen.tables.records;

import edu.java.domain.jooq.codegen.tables.Chat;
import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class ChatRecord extends UpdatableRecordImpl<ChatRecord> implements Record3<Long, Integer, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>CHAT.TG_CHAT_ID</code>.
     */
    public void setTgChatId(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>CHAT.TG_CHAT_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTgChatId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>CHAT.STATE</code>.
     */
    public void setState(@NotNull Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>CHAT.STATE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getState() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>CHAT.LAST_UPDATE_AT</code>.
     */
    public void setLastUpdateAt(@NotNull OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>CHAT.LAST_UPDATE_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getLastUpdateAt() {
        return (OffsetDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row3<Long, Integer, OffsetDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row3<Long, Integer, OffsetDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return Chat.CHAT.TG_CHAT_ID;
    }

    @Override
    @NotNull
    public Field<Integer> field2() {
        return Chat.CHAT.STATE;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field3() {
        return Chat.CHAT.LAST_UPDATE_AT;
    }

    @Override
    @NotNull
    public Long component1() {
        return getTgChatId();
    }

    @Override
    @NotNull
    public Integer component2() {
        return getState();
    }

    @Override
    @NotNull
    public OffsetDateTime component3() {
        return getLastUpdateAt();
    }

    @Override
    @NotNull
    public Long value1() {
        return getTgChatId();
    }

    @Override
    @NotNull
    public Integer value2() {
        return getState();
    }

    @Override
    @NotNull
    public OffsetDateTime value3() {
        return getLastUpdateAt();
    }

    @Override
    @NotNull
    public ChatRecord value1(@NotNull Long value) {
        setTgChatId(value);
        return this;
    }

    @Override
    @NotNull
    public ChatRecord value2(@NotNull Integer value) {
        setState(value);
        return this;
    }

    @Override
    @NotNull
    public ChatRecord value3(@NotNull OffsetDateTime value) {
        setLastUpdateAt(value);
        return this;
    }

    @Override
    @NotNull
    public ChatRecord values(@NotNull Long value1, @NotNull Integer value2, @NotNull OffsetDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChatRecord
     */
    public ChatRecord() {
        super(Chat.CHAT);
    }

    /**
     * Create a detached, initialised ChatRecord
     */
    @ConstructorProperties({"tgChatId", "state", "lastUpdateAt"})
    public ChatRecord(@NotNull Long tgChatId, @NotNull Integer state, @NotNull OffsetDateTime lastUpdateAt) {
        super(Chat.CHAT);

        setTgChatId(tgChatId);
        setState(state);
        setLastUpdateAt(lastUpdateAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ChatRecord
     */
    public ChatRecord(edu.java.domain.jooq.codegen.tables.pojos.Chat value) {
        super(Chat.CHAT);

        if (value != null) {
            setTgChatId(value.getTgChatId());
            setState(value.getState());
            setLastUpdateAt(value.getLastUpdateAt());
            resetChangedOnNotNull();
        }
    }
}
